/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.org.sistempenjualan.gui;

import com.org.sistempenjualan.dao.UserDao;
import com.org.sistempenjualan.dao.impl.UserDaoImpl;
import com.org.sistempenjualan.entity.Entity;
import static java.lang.Thread.sleep;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import com.org.sistempenjualan.Utility;

/**
 *
 * @author DIOR
 */
public class UserForm extends javax.swing.JFrame {
    // Inisialisasi Objek
    Entity entity = new Entity();
    Utility util = new Utility();
    UserDao dao = new UserDaoImpl();
    
    // Global Variabel
    boolean flagUpdate = false;
    String nikSession = "";
    
    public UserForm(Entity a) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        setupTable();
        util.tanggalSekarang(todayDate);
        nikSession = a.getNikSession();
        userSession.setText("Login As: "+a.getUserSession());
        entity.setNikSession(nikSession);
        entity.setUserSession(a.getUserSession());
        entity.setNikSession(a.getRoleSession());
        lblAlert.setVisible(false);
        mbUser.add(Box.createHorizontalGlue());
        mbUser.add(todayDate);
        mbUser.add(userSession);
        txtNik.setEditable(false);
        btnHapusUser.setEnabled(true);
        clearForm();
    }
    
    public void clearForm(){
        // Clear Value
        btnNikBaru.setText("Baru");
        txtNik.setText("");
        txtNamaUser.setText("");
        cbRoleUser.setSelectedIndex(0);
        txtPassword.setText("");
        txtKonfirmPwd.setText("");
        setupTable();
    }
    
    public void setupTable(){
        tblUser.setModel(DbUtils.resultSetToTableModel(dao.setUserTable()));
        util.adjustColumn(tblUser);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupJk = new javax.swing.ButtonGroup();
        lblNik = new javax.swing.JLabel();
        txtNik = new javax.swing.JTextField();
        txtNamaUser = new javax.swing.JTextField();
        lblNamaUser = new javax.swing.JLabel();
        lblRoleUser = new javax.swing.JLabel();
        cbRoleUser = new javax.swing.JComboBox();
        btnNikBaru = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblKonfirmPassword = new javax.swing.JLabel();
        txtKonfirmPwd = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        btnSimpanUser = new javax.swing.JButton();
        lblAlert = new javax.swing.JLabel();
        btnHapusUser = new javax.swing.JButton();
        lblCariUser = new javax.swing.JLabel();
        txtCariUser = new javax.swing.JTextField();
        btnResetForm = new javax.swing.JButton();
        mbUser = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnLogOut = new javax.swing.JMenuItem();
        todayDate = new javax.swing.JMenu();
        userSession = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Form User");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblNik.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNik.setText("NIK");

        lblNamaUser.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNamaUser.setText("Nama User");

        lblRoleUser.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblRoleUser.setText("Role User");

        cbRoleUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Pilih Role --", "Admin", "Inventory", "Kasir", "Kurir", "Registrasi", "Direktur" }));

        btnNikBaru.setText("Baru");
        btnNikBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNikBaruActionPerformed(evt);
            }
        });

        lblPassword.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblPassword.setText("Password");

        lblKonfirmPassword.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblKonfirmPassword.setText("Konfirmasi Password");

        txtKonfirmPwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKonfirmPwdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKonfirmPwdKeyTyped(evt);
            }
        });

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        btnSimpanUser.setText("SIMPAN");
        btnSimpanUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanUserActionPerformed(evt);
            }
        });

        lblAlert.setBackground(new java.awt.Color(255, 51, 51));
        lblAlert.setText("Tidak Sama!");

        btnHapusUser.setText("HAPUS");
        btnHapusUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusUserActionPerformed(evt);
            }
        });

        lblCariUser.setText("Cari :");

        txtCariUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariUserKeyReleased(evt);
            }
        });

        btnResetForm.setText("RESET");
        btnResetForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetFormActionPerformed(evt);
            }
        });

        jMenu1.setText("Server");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        jMenu1.add(btnLogOut);

        mbUser.add(jMenu1);

        todayDate.setText("Date");
        mbUser.add(todayDate);

        userSession.setText("User");
        mbUser.add(userSession);

        setJMenuBar(mbUser);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCariUser, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCariUser, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblKonfirmPassword)
                                    .addComponent(txtKonfirmPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPassword)
                                    .addComponent(lblRoleUser)
                                    .addComponent(txtNamaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNik)
                                    .addComponent(cbRoleUser, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblAlert))
                            .addComponent(lblNamaUser)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNik, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnNikBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSimpanUser)
                                .addGap(18, 18, 18)
                                .addComponent(btnHapusUser)
                                .addGap(18, 18, 18)
                                .addComponent(btnResetForm)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCariUser)
                    .addComponent(txtCariUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNik)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNikBaru))
                        .addGap(18, 18, 18)
                        .addComponent(lblNamaUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNamaUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblRoleUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbRoleUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPassword)
                        .addGap(18, 18, 18)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblKonfirmPassword)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKonfirmPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAlert))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSimpanUser)
                            .addComponent(btnHapusUser)
                            .addComponent(btnResetForm))))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void txtKonfirmPwdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKonfirmPwdKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtKonfirmPwdKeyTyped

    private void btnNikBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNikBaruActionPerformed
        // TODO add your handling code here:
        String txtBtnNik = btnNikBaru.getText();
        
        if(txtBtnNik.equals("Baru")){
            flagUpdate = false;
            btnNikBaru.setText("Cancel");
            String lastNik = dao.getLastNik();
            String newSeqNik = ""+(Integer.parseInt(lastNik)+1);
            String nol = "";
            if(newSeqNik.length() == 1){
                nol = "0000";
            } else if(newSeqNik.length() == 2){
                nol = "000";
            } else if(newSeqNik.length() == 3){
                nol = "00";
            } else if(newSeqNik.length() == 4){
                nol = "0";
            }else if(newSeqNik.length() == 5){
                nol = "";
            }
            
            String newNik = nol+newSeqNik;
            
            txtNik.setText(newNik);
            txtNamaUser.setText("");
            cbRoleUser.setSelectedIndex(0);
            txtPassword.setText("");
            txtKonfirmPwd.setText("");
            btnHapusUser.setEnabled(false);
        }else{
            flagUpdate = true;
            btnNikBaru.setText("Baru");
            txtNik.setText("");
            btnHapusUser.setEnabled(true);
        }
    }//GEN-LAST:event_btnNikBaruActionPerformed

    private void btnSimpanUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanUserActionPerformed
        boolean result = false;
        String nik = txtNik.getText();
        String userName = txtNamaUser.getText();
        String role = (String)cbRoleUser.getSelectedItem();
        String password = String.valueOf(txtPassword.getPassword());
        String konfirmPwd = String.valueOf(txtKonfirmPwd.getPassword());
        int confirm = JOptionPane.showConfirmDialog(null, "Anda yakin ingin menyimpan data?","Simpan Data",JOptionPane.YES_NO_OPTION);
        try{
            if(confirm==0){
                if(!flagUpdate){
                    if(!nik.equals("") || !userName.equals("") || cbRoleUser.getSelectedIndex() != 0 || !password.equals("")){
                        if(password.equals(konfirmPwd)){
                            entity.setNik(nik);
                            entity.setUserName(userName);
                            entity.setRole(role);
                            entity.setPassword(konfirmPwd);
                            entity.setNikSession(nikSession);
                            result = dao.addUser(entity);
                            if(result){
                                JOptionPane.showMessageDialog(rootPane,"Data Berhasil disimpan!");
                                clearForm();
                            }else{
                                JOptionPane.showMessageDialog(rootPane,"Error Simpan User");
                            }
                        }else{
                            JOptionPane.showMessageDialog(rootPane,"Password Belum Sama");
                        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane,"Form Harus Diisi Semua!");
                    }  
                }else{
                    entity.setNik(nik);
                    entity.setUserName(userName);
                    entity.setRole(role);
                    entity.setNikSession(nikSession);
                    entity.setPassword(password);
                    result = dao.editUser(entity);
                    if(result){
                        JOptionPane.showMessageDialog(rootPane,"Data Berhasil diupdate!");
                        clearForm();
                    }else{
                        JOptionPane.showMessageDialog(rootPane,"Error Update User");
                    }
                }
            }
        }catch(Exception e){
            try {
                throw new Exception(e);
            } catch (Exception ex) {
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSimpanUserActionPerformed

    private void txtKonfirmPwdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKonfirmPwdKeyReleased
        String password = String.valueOf(txtPassword.getPassword());
        String confirmPwd = String.valueOf(txtKonfirmPwd.getPassword());
        if(!password.equals(confirmPwd)){
            lblAlert.setVisible(true);
        }else{
            lblAlert.setVisible(false);
        }
    }//GEN-LAST:event_txtKonfirmPwdKeyReleased

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        // TODO add your handling code here:
        btnNikBaru.setText("Baru");
        flagUpdate = true;
        int row = tblUser.getSelectedRow();
        txtNik.setText(tblUser.getModel().getValueAt(row,0).toString());
        txtNamaUser.setText(tblUser.getModel().getValueAt(row,1).toString());
        String o = (String) tblUser.getValueAt(tblUser.getSelectedRow(), 2);
        cbRoleUser.setSelectedItem(o);
        //txtPassword.setText(tblUser.getModel().getValueAt(row,3).toString());
        btnHapusUser.setEnabled(true);
    }//GEN-LAST:event_tblUserMouseClicked

    private void txtCariUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariUserKeyReleased
        String param = txtCariUser.getText();
        tblUser.setModel(DbUtils.resultSetToTableModel(dao.getUserByParam(param)));
        util.adjustColumn(tblUser);
    }//GEN-LAST:event_txtCariUserKeyReleased

    private void btnHapusUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusUserActionPerformed
        boolean result = false;
        String nik = txtNik.getText();
        int confirm = JOptionPane.showConfirmDialog(null, "Anda yakin ingin menghapus data?","Hapus Data",JOptionPane.YES_NO_OPTION);
        try{
            if(confirm==0){
                if(!nik.equals("")){
                    result = dao.deleteUser(nik);
                    if(result){
                        JOptionPane.showMessageDialog(rootPane,"Data Berhasil dihapus!");
                        clearForm();
                    }else{
                        JOptionPane.showMessageDialog(rootPane,"Error Hapus User!");
                    }
                }else{
                    JOptionPane.showMessageDialog(rootPane,"Silakan Pilih User Terlebih dulu!");
                }
                        
            }
        }catch(Exception e){
            try {
                throw new Exception(e);
            } catch (Exception ex) {
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnHapusUserActionPerformed

    private void btnResetFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetFormActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnResetFormActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (JOptionPane.showConfirmDialog(this, 
            "Apakah anda yakin ingin menutup form?", "Tutup Form", 
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
            System.exit(0);
        }

    }//GEN-LAST:event_formWindowClosing

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroupJk;
    private javax.swing.JButton btnHapusUser;
    private javax.swing.JMenuItem btnLogOut;
    private javax.swing.JButton btnNikBaru;
    private javax.swing.JButton btnResetForm;
    private javax.swing.JButton btnSimpanUser;
    private javax.swing.JComboBox cbRoleUser;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAlert;
    private javax.swing.JLabel lblCariUser;
    private javax.swing.JLabel lblKonfirmPassword;
    private javax.swing.JLabel lblNamaUser;
    private javax.swing.JLabel lblNik;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRoleUser;
    private javax.swing.JMenuBar mbUser;
    private javax.swing.JTable tblUser;
    private javax.swing.JMenu todayDate;
    private javax.swing.JTextField txtCariUser;
    private javax.swing.JPasswordField txtKonfirmPwd;
    private javax.swing.JTextField txtNamaUser;
    private javax.swing.JTextField txtNik;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JMenu userSession;
    // End of variables declaration//GEN-END:variables
}
